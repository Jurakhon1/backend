const axios = require('axios');

const BASE_URL = 'http://localhost:3000';

// –î–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –∏–∑ JSON
const products = [
  {
    id: 1,
    name: 'iPhone 15 Pro Max 256GB',
    colorVariants: [
      { id: 1, color: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π —Ç–∏—Ç–∞–Ω', colorCode: '#E5E5E7' },
      { id: 2, color: '–°–∏–Ω–∏–π —Ç–∏—Ç–∞–Ω', colorCode: '#5E6B73' },
      { id: 3, color: '–ë–µ–ª—ã–π —Ç–∏—Ç–∞–Ω', colorCode: '#F5F5DC' },
      { id: 4, color: '–ß–µ—Ä–Ω—ã–π —Ç–∏—Ç–∞–Ω', colorCode: '#1C1C1E' },
    ],
  },
  {
    id: 2,
    name: 'Samsung Galaxy S24 Ultra 512GB',
    colorVariants: [
      { id: 8, color: '–¢–∏—Ç–∞–Ω —á–µ—Ä–Ω—ã–π', colorCode: '#2C2C2E' },
      { id: 9, color: '–¢–∏—Ç–∞–Ω —Å–µ—Ä—ã–π', colorCode: '#8E8E93' },
      { id: 10, color: '–¢–∏—Ç–∞–Ω —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π', colorCode: '#8E44AD' },
      { id: 11, color: '–¢–∏—Ç–∞–Ω –∂–µ–ª—Ç—ã–π', colorCode: '#FFD700' },
    ],
  },
  {
    id: 3,
    name: 'Xiaomi 14 Ultra 1TB',
    colorVariants: [
      { id: 15, color: '–ß–µ—Ä–Ω—ã–π', colorCode: '#000000' },
      { id: 16, color: '–ë–µ–ª—ã–π', colorCode: '#FFFFFF' },
      { id: 17, color: '–ó–µ–ª–µ–Ω—ã–π', colorCode: '#00FF7F' },
      { id: 18, color: '–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π', colorCode: '#8B4513' },
    ],
  },
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ü–≤–µ—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
async function createColorImage(productId, variantId, colorName, colorCode) {
  const colorImageData = {
    product_id: productId,
    variant_id: variantId,
    primary_image_url: `https://via.placeholder.com/400x400${colorCode.replace('#', '')}/FFFFFF?text=${encodeURIComponent(colorName)}`,
    thumbnail_url: `https://via.placeholder.com/200x200${colorCode.replace('#', '')}/FFFFFF?text=${encodeURIComponent(colorName)}`,
    gallery_urls: [
      `https://via.placeholder.com/600x400${colorCode.replace('#', '')}/FFFFFF?text=${encodeURIComponent(colorName)}+1`,
      `https://via.placeholder.com/600x400${colorCode.replace('#', '')}/FFFFFF?text=${encodeURIComponent(colorName)}+2`,
      `https://via.placeholder.com/600x400${colorCode.replace('#', '')}/FFFFFF?text=${encodeURIComponent(colorName)}+3`,
    ],
    color_code: colorCode,
    is_active: true,
  };

  try {
    const response = await axios.post(
      `${BASE_URL}/products/${productId}/color-images`,
      colorImageData,
    );
    return response.data;
  } catch (error) {
    console.error(
      `‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ü–≤–µ—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è ${colorName}:`,
      error.response?.data || error.message,
    );
    return null;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function createColorImagesForAllProducts() {
  console.log('üé® –°–æ–∑–¥–∞–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤...\n');

  for (const product of products) {
    console.log(`üì± –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–∞: ${product.name} (ID: ${product.id})`);

    for (const variant of product.colorVariants) {
      console.log(
        `  üé® –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Ü–≤–µ—Ç–∞: ${variant.color} (${variant.colorCode})`,
      );

      const result = await createColorImage(
        product.id,
        variant.id,
        variant.color,
        variant.colorCode,
      );

      if (result) {
        console.log(`    ‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ! ID: ${result.id}`);
      } else {
        console.log(`    ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ`);
      }

      // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
      await new Promise((resolve) => setTimeout(resolve, 100));
    }

    console.log(''); // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  }

  console.log('üéâ –ü—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è —Ü–≤–µ—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω!');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
async function checkCreatedImages() {
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...\n');

  for (const product of products) {
    try {
      const response = await axios.get(
        `${BASE_URL}/products/${product.id}/color-images`,
      );
      console.log(`üì± ${product.name}:`);
      console.log(`   –ù–∞–π–¥–µ–Ω–æ —Ü–≤–µ—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${response.data.length}`);

      response.data.forEach((image, index) => {
        console.log(
          `   ${index + 1}. –¶–≤–µ—Ç: ${image.color_code} | –ê–∫—Ç–∏–≤–Ω–æ: ${image.is_active}`,
        );
      });
      console.log('');
    } catch (error) {
      console.error(
        `‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è ${product.name}:`,
        error.response?.data || error.message,
      );
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
async function main() {
  try {
    await createColorImagesForAllProducts();
    await checkCreatedImages();
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

main();
