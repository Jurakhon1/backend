const axios = require('axios');

// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ–∫–∞ –≤ base64 —Ñ–æ—Ä–º–∞—Ç–µ
async function testReceiptBase64Upload() {
  const baseUrl = 'http://localhost:3000';
  
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ–∫–∞ –≤ base64 —Ñ–æ—Ä–º–∞—Ç–µ...\n');

    // 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    console.log('1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...');
    const createTransactionResponse = await axios.post(`${baseUrl}/payment/transactions`, {
      order_id: 1, // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –∑–∞–∫–∞–∑ —Å ID 1 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      bank_id: 1   // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –±–∞–Ω–∫ —Å ID 1 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    });
    
    const transactionId = createTransactionResponse.data.id;
    console.log(`‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ —Å ID: ${transactionId}\n`);

    // 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ base64 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (1x1 –ø–∏–∫—Å–µ–ª—å PNG)
    const testBase64Image = 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==';
    
    // 3. –ó–∞–≥—Ä—É–∂–∞–µ–º —á–µ–∫ –≤ base64 —Ñ–æ—Ä–º–∞—Ç–µ
    console.log('2. –ó–∞–≥—Ä—É–∑–∫–∞ —á–µ–∫–∞ –≤ base64 —Ñ–æ—Ä–º–∞—Ç–µ...');
    const uploadResponse = await axios.post(
      `${baseUrl}/payment/transactions/${transactionId}/upload-receipt-base64`,
      {
        base64_image: testBase64Image,
        file_extension: 'png',
        mime_type: 'image/png'
      }
    );
    
    console.log('‚úÖ –ß–µ–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ base64 —Ñ–æ—Ä–º–∞—Ç–µ');
    console.log('üìä –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:');
    console.log(`   - ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${uploadResponse.data.id}`);
    console.log(`   - –°—Ç–∞—Ç—É—Å: ${uploadResponse.data.status}`);
    console.log(`   - URL —á–µ–∫–∞: ${uploadResponse.data.receipt_image_url || 'null'}`);
    console.log(`   - Base64 –¥–∞–Ω–Ω—ã–µ: ${uploadResponse.data.receipt_image_base64 ? '–ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}`);
    console.log(`   - –†–∞–∑–º–µ—Ä base64: ${uploadResponse.data.receipt_image_base64 ? uploadResponse.data.receipt_image_base64.length : 0} —Å–∏–º–≤–æ–ª–æ–≤\n`);

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    console.log('3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...');
    const getTransactionResponse = await axios.get(`${baseUrl}/payment/orders/1/transactions`);
    
    const transaction = getTransactionResponse.data.find(t => t.id === transactionId);
    if (transaction) {
      console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞');
      console.log(`   - Base64 –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: ${transaction.receipt_image_base64 ? '–¥–∞' : '–Ω–µ—Ç'}`);
      console.log(`   - URL —á–µ–∫–∞: ${transaction.receipt_image_url || 'null'}`);
    } else {
      console.log('‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }

    console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:');
    if (error.response) {
      console.error(`   –°—Ç–∞—Ç—É—Å: ${error.response.status}`);
      console.error(`   –î–∞–Ω–Ω—ã–µ: ${JSON.stringify(error.response.data, null, 2)}`);
    } else {
      console.error(`   –°–æ–æ–±—â–µ–Ω–∏–µ: ${error.message}`);
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testReceiptBase64Upload();
