const axios = require('axios');
const FormData = require('form-data');
const fs = require('fs');
const path = require('path');

const API_BASE_URL = 'http://localhost:3000';

async function testImageUpload() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...\n');

    // 1. –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã
    console.log('1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤...');
    const productsResponse = await axios.get(`${API_BASE_URL}/products`);
    const products = productsResponse.data;
    
    if (products.length === 0) {
      console.log('‚ùå –ù–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }

    const product = products[0];
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–æ–¥—É–∫—Ç: ${product.localized_name} (ID: ${product.id})`);

    // 2. –ü–æ–ª—É—á–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø—Ä–æ–¥—É–∫—Ç–∞
    console.log('\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø—Ä–æ–¥—É–∫—Ç–∞...');
    const variantsResponse = await axios.get(`${API_BASE_URL}/products/${product.id}/variants`);
    const variants = variantsResponse.data;
    
    if (variants.length === 0) {
      console.log('‚ùå –ù–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }

    const variant = variants[0];
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –≤–∞—Ä–∏–∞–Ω—Ç: ${variant.variantValue.ru} (ID: ${variant.id})`);

    // 3. –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    console.log('\n3. –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const imagePath = path.join(__dirname, 'uploads', 'phones', 'test-image.jpg');
    
    if (!fs.existsSync(imagePath)) {
      console.log('‚ùå –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ:', imagePath);
      console.log('üìÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ uploads/phones/:');
      const files = fs.readdirSync(path.join(__dirname, 'uploads', 'phones'));
      files.forEach(file => console.log(`   - ${file}`));
      return;
    }

    const formData = new FormData();
    formData.append('file', fs.createReadStream(imagePath));

    const uploadResponse = await axios.post(
      `${API_BASE_URL}/products/${product.id}/color-images/upload?colorId=${variant.id}`,
      formData,
      {
        headers: {
          ...formData.getHeaders(),
        },
      }
    );

    console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üì∏ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', uploadResponse.data.primary_image_url);
    console.log('üñºÔ∏è URL –º–∏–Ω–∏–∞—Ç—é—Ä—ã:', uploadResponse.data.thumbnail_url);

    // 4. –ü–æ–ª—É—á–∞–µ–º –±—ã—Å—Ç—Ä—ã–µ —Ü–≤–µ—Ç–∞
    console.log('\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ –±—ã—Å—Ç—Ä—ã—Ö —Ü–≤–µ—Ç–æ–≤...');
    const colorsResponse = await axios.get(`${API_BASE_URL}/products/${product.id}/colors-fast`);
    console.log('‚úÖ –¶–≤–µ—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã:', colorsResponse.data.colors.length, '—Ü–≤–µ—Ç–æ–≤');

    // 5. –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞
    console.log('\n5. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ü–≤–µ—Ç–∞...');
    const colorImagesResponse = await axios.get(`${API_BASE_URL}/products/${product.id}/color/${variant.id}/images`);
    console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã:', colorImagesResponse.data);

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
    if (error.response?.status === 404) {
      console.log('üí° –í–æ–∑–º–æ–∂–Ω–æ, —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run start:dev');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testImageUpload();

