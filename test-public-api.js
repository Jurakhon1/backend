const axios = require('axios');

async function testPublicAPI() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...\n');

    // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    console.log('üì± –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤...');
    const response1 = await axios.get('http://localhost:3000/products');
    console.log('‚úÖ –ü—Ä–æ–¥—É–∫—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã:', response1.data.length, '—à—Ç.');

    if (response1.data.length > 0) {
      const firstProduct = response1.data[0];
      console.log(
        '  - –ü–µ—Ä–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç:',
        firstProduct.name?.ru || firstProduct.name_ru,
      );

      // –¢–µ—Å—Ç 2: –ë—ã—Å—Ç—Ä–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤
      console.log('\nüé® –¢–µ—Å—Ç 2: –ë—ã—Å—Ç—Ä–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤...');
      const response2 = await axios.get(
        `http://localhost:3000/products/${firstProduct.id}/colors-fast`,
      );
      console.log('‚úÖ –¶–≤–µ—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã:');
      console.log(
        '  - –ü—Ä–æ–¥—É–∫—Ç:',
        response2.data.name?.ru || response2.data.name,
      );
      console.log('  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–≤–µ—Ç–æ–≤:', response2.data.colors?.length || 0);

      if (response2.data.colors && response2.data.colors.length > 0) {
        console.log(
          '  - –ü–µ—Ä–≤—ã–π —Ü–≤–µ—Ç:',
          response2.data.colors[0].name?.ru || response2.data.colors[0].name,
        );

        // –¢–µ—Å—Ç 3: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞
        console.log('\nüì∏ –¢–µ—Å—Ç 3: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞...');
        const colorId = response2.data.colors[0].id;
        const response3 = await axios.get(
          `http://localhost:3000/products/${firstProduct.id}/color/${colorId}/images`,
        );
        console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã:');
        console.log(
          '  - –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:',
          response3.data.primaryImage ? '‚úÖ' : '‚ùå',
        );
        console.log(
          '  - –ì–∞–ª–µ—Ä–µ—è:',
          response3.data.gallery?.length || 0,
          '–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π',
        );
      }
    }

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
}

testPublicAPI();
