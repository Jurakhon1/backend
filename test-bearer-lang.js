const axios = require('axios');

const API_BASE = 'http://localhost:3000';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testProduct = {
  name_ru: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç',
  name_en: 'Test Product',
  slug: 'test-product-bearer',
  category_id: 1,
  brand_id: 1,
  model: 'Test Model',
  sku: 'TEST-BEARER-001',
  base_price: 1000,
  sale_price: 900,
  currency: 'RUB',
  description_ru: '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º',
  description_en: 'Description in English',
  short_description_ru: '–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º',
  short_description_en: 'Short description in English',
  weight: 100,
  dimensions: '10x10x5 —Å–º',
  warranty_months: 12,
  stock_quantity: 50,
  min_stock_level: 5,
  is_active: true,
  is_featured: false,
  meta_title_ru: 'SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞ —Ä—É—Å—Å–∫–æ–º',
  meta_title_en: 'SEO title in English',
  meta_description_ru: 'SEO –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º',
  meta_description_en: 'SEO description in English',
  meta_keywords_ru: '—Ç–µ—Å—Ç, –ø—Ä–æ–¥—É–∫—Ç',
  meta_keywords_en: 'test, product',
  tags: ['—Ç–µ—Å—Ç', 'bearer', '—è–∑—ã–∫–∏'],
};

async function testBearerAndLanguages() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Bearer —Ç–æ–∫–µ–Ω–æ–≤ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —è–∑—ã–∫–æ–≤...\n');

  try {
    // 1. –¢–µ—Å—Ç –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ (–¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤)
    console.log('1. –¢–µ—Å—Ç –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ (–ø—É–±–ª–∏—á–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã)...');
    const publicResponse = await axios.get(`${API_BASE}/products?lang=ru`);
    console.log('‚úÖ –ü—É–±–ª–∏—á–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –±–µ–∑ —Ç–æ–∫–µ–Ω–∞');
    console.log(`   –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${publicResponse.data.length}`);

    // 2. –¢–µ—Å—Ç —Å —è–∑—ã–∫–æ–º RU
    console.log('\n2. –¢–µ—Å—Ç —Å —è–∑—ã–∫–æ–º RU...');
    const ruResponse = await axios.get(`${API_BASE}/products?lang=ru`);
    if (ruResponse.data.length > 0) {
      const product = ruResponse.data[0];
      console.log('‚úÖ –Ø–∑—ã–∫ RU —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log(
        `   –ù–∞–∑–≤–∞–Ω–∏–µ: ${product.localized_name || product.name?.ru || 'N/A'}`,
      );
      console.log(
        `   –û–ø–∏—Å–∞–Ω–∏–µ: ${product.localized_description || product.description?.ru || 'N/A'}`,
      );
      if (product.category) {
        console.log(
          `   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${product.category.localized_name || product.category.name?.ru || 'N/A'}`,
        );
      }
    }

    // 3. –¢–µ—Å—Ç —Å —è–∑—ã–∫–æ–º EN
    console.log('\n3. –¢–µ—Å—Ç —Å —è–∑—ã–∫–æ–º EN...');
    const enResponse = await axios.get(`${API_BASE}/products?lang=en`);
    if (enResponse.data.length > 0) {
      const product = enResponse.data[0];
      console.log('‚úÖ –Ø–∑—ã–∫ EN —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log(
        `   –ù–∞–∑–≤–∞–Ω–∏–µ: ${product.localized_name || product.name?.en || 'N/A'}`,
      );
      console.log(
        `   –û–ø–∏—Å–∞–Ω–∏–µ: ${product.localized_description || product.description?.en || 'N/A'}`,
      );
      if (product.category) {
        console.log(
          `   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${product.category.localized_name || product.category.name?.en || 'N/A'}`,
        );
      }
    }

    // 4. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ (—Ç—Ä–µ–±—É–µ—Ç —Ç–æ–∫–µ–Ω)
    console.log(
      '\n4. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 401)...',
    );
    try {
      await axios.post(`${API_BASE}/products`, testProduct);
      console.log('‚ùå –û—à–∏–±–∫–∞: –ø—Ä–æ–¥—É–∫—Ç —Å–æ–∑–¥–∞–ª—Å—è –±–µ–∑ —Ç–æ–∫–µ–Ω–∞!');
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ç—Ä–µ–±—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
      } else {
        console.log(
          `‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: ${error.response?.status} - ${error.response?.data?.message}`,
        );
      }
    }

    // 5. –¢–µ—Å—Ç —Å Bearer —Ç–æ–∫–µ–Ω–æ–º (–µ—Å–ª–∏ –µ—Å—Ç—å)
    console.log('\n5. –¢–µ—Å—Ç —Å Bearer —Ç–æ–∫–µ–Ω–æ–º...');
    const token = process.env.TEST_TOKEN || 'test-token';

    try {
      const authResponse = await axios.post(
        `${API_BASE}/products`,
        testProduct,
        {
          headers: {
            Authorization: `Bearer ${token}`,
            'Content-Type': 'application/json',
          },
        },
      );
      console.log('‚úÖ –ü—Ä–æ–¥—É–∫—Ç —Å–æ–∑–¥–∞–Ω —Å Bearer —Ç–æ–∫–µ–Ω–æ–º');
      console.log(`   ID: ${authResponse.data.id}`);
      console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${authResponse.data.localized_name}`);

      // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç
      await axios.delete(`${API_BASE}/products/${authResponse.data.id}`, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç —É–¥–∞–ª–µ–Ω');
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('‚ö†Ô∏è  –¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è');
        console.log('   –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –Ω–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
      } else {
        console.log(
          `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞: ${error.response?.status} - ${error.response?.data?.message}`,
        );
      }
    }

    // 6. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ ID —Å —è–∑—ã–∫–∞–º–∏
    console.log('\n6. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ ID —Å —è–∑—ã–∫–∞–º–∏...');
    if (ruResponse.data.length > 0) {
      const productId = ruResponse.data[0].id;

      // RU –≤–µ—Ä—Å–∏—è
      const productRu = await axios.get(
        `${API_BASE}/products/${productId}?lang=ru`,
      );
      console.log('‚úÖ –ü—Ä–æ–¥—É–∫—Ç –ø–æ ID (RU):');
      console.log(
        `   –ù–∞–∑–≤–∞–Ω–∏–µ: ${productRu.data.localized_name || productRu.data.name?.ru}`,
      );

      // EN –≤–µ—Ä—Å–∏—è
      const productEn = await axios.get(
        `${API_BASE}/products/${productId}?lang=en`,
      );
      console.log('‚úÖ –ü—Ä–æ–¥—É–∫—Ç –ø–æ ID (EN):');
      console.log(
        `   –ù–∞–∑–≤–∞–Ω–∏–µ: ${productEn.data.localized_name || productEn.data.name?.en}`,
      );
    }

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã Bearer —Ç–æ–∫–µ–Ω–æ–≤ –∏ —è–∑—ã–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testBearerAndLanguages();
