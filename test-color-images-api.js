const axios = require('axios');

const BASE_URL = 'http://localhost:3000';

async function testColorImagesAPI() {
  console.log('üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ü–≤–µ—Ç–æ–≤...\n');

  try {
    // –¢–µ—Å—Ç 1: –ë—ã—Å—Ç—Ä–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –ø—Ä–æ–¥—É–∫—Ç–∞
    console.log(
      'üì± –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –¥–ª—è iPhone 15 Pro Max...',
    );
    const response1 = await axios.get(`${BASE_URL}/products/1/colors-fast`);

    console.log('‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:');
    console.log(`  - –ü—Ä–æ–¥—É–∫—Ç: ${response1.data.name.ru}`);
    console.log(`  - –¶–µ–Ω–∞: ${response1.data.price} —Ä—É–±.`);
    console.log(`  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–≤–µ—Ç–æ–≤: ${response1.data.colors.length}`);

    response1.data.colors.forEach((color, index) => {
      console.log(
        `  - –¶–≤–µ—Ç ${index + 1}: ${color.name.ru} (${color.code}) - ${color.imageCount} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`,
      );
    });

    console.log('\nüì∏ –ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:');
    Object.keys(response1.data.gallery).forEach((colorId) => {
      const images = response1.data.gallery[colorId];
      console.log(`  - –¶–≤–µ—Ç ID ${colorId}: ${images.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
    });

    // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞
    console.log('\nüé® –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞...');
    const firstColor = response1.data.colors[0];
    const response2 = await axios.get(
      `${BASE_URL}/products/1/color/${firstColor.id}/images`,
    );

    console.log('‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:');
    console.log(`  - –¶–≤–µ—Ç ID: ${response2.data.colorId}`);
    console.log(`  - –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${response2.data.primaryImage}`);
    console.log(`  - –ö–æ–¥ —Ü–≤–µ—Ç–∞: ${response2.data.colorCode}`);
    console.log(`  - –ì–∞–ª–µ—Ä–µ—è: ${response2.data.gallery.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    console.log('\n‚ö° –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...');
    const startTime = Date.now();

    const promises = [];
    for (let i = 0; i < 10; i++) {
      promises.push(axios.get(`${BASE_URL}/products/1/colors-fast`));
    }

    await Promise.all(promises);
    const endTime = Date.now();
    const avgTime = (endTime - startTime) / 10;

    console.log(
      `‚úÖ 10 –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –∑–∞ ${endTime - startTime}–º—Å`,
    );
    console.log(`‚ö° –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${avgTime.toFixed(2)}–º—Å`);

    // –¢–µ—Å—Ç 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å Samsung Galaxy
    console.log('\nüì± –¢–µ—Å—Ç 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å Samsung Galaxy S24 Ultra...');
    const response4 = await axios.get(`${BASE_URL}/products/2/colors-fast`);

    console.log('‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:');
    console.log(`  - –ü—Ä–æ–¥—É–∫—Ç: ${response4.data.name.ru}`);
    console.log(`  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–≤–µ—Ç–æ–≤: ${response4.data.colors.length}`);

    response4.data.colors.forEach((color, index) => {
      console.log(
        `  - –¶–≤–µ—Ç ${index + 1}: ${color.name.ru} (${color.code}) - ${color.imageCount} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`,
      );
    });

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
    console.log('  ‚úÖ –ë—ã—Å—Ç—Ä–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ü–≤–µ—Ç–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏');
    console.log('  ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞');
    console.log('  ‚úÖ –í—ã—Å–æ–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å API');
    console.log('  ‚úÖ –ú–Ω–æ–≥–æ—è–∑—ã—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞');
    console.log('  ‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö');
  } catch (error) {
    console.error(
      '‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:',
      error.response?.data || error.message,
    );
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testColorImagesAPI();
