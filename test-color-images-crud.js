const axios = require('axios');

const BASE_URL = 'http://localhost:3000';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testProductId = 1;
const testVariantId = 1;
const testColorImage = {
  product_id: testProductId,
  variant_id: testVariantId,
  primary_image_url: 'https://example.com/test-color-image.jpg',
  thumbnail_url: 'https://example.com/test-color-thumb.jpg',
  gallery_urls: [
    'https://example.com/gallery1.jpg',
    'https://example.com/gallery2.jpg',
  ],
  color_code: '#FF5733',
  is_active: true,
};

async function testColorImagesCRUD() {
  console.log('üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CRUD –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è —Ü–≤–µ—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...\n');

  try {
    // –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    console.log('üìù –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
    const createResponse = await axios.post(
      `${BASE_URL}/products/${testProductId}/color-images`,
      testColorImage,
    );
    console.log('‚úÖ –¶–≤–µ—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ:', createResponse.data);
    const imageId = createResponse.data.id;

    // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ü–≤–µ—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç–∞
    console.log('\nüìã –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ü–≤–µ—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç–∞...');
    const getAllResponse = await axios.get(
      `${BASE_URL}/products/${testProductId}/color-images`,
    );
    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã —Ü–≤–µ—Ç–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', getAllResponse.data);

    // –¢–µ—Å—Ç 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    console.log('\n‚úèÔ∏è –¢–µ—Å—Ç 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
    const updateData = {
      color_code: '#00FF00',
      is_active: false,
      gallery_urls: [
        'https://example.com/updated-gallery1.jpg',
        'https://example.com/updated-gallery2.jpg',
        'https://example.com/updated-gallery3.jpg',
      ],
    };
    const updateResponse = await axios.put(
      `${BASE_URL}/products/color-images/${imageId}`,
      updateData,
    );
    console.log('‚úÖ –¶–≤–µ—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ:', updateResponse.data);

    // –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞
    console.log('\nüé® –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞...');
    const getColorResponse = await axios.get(
      `${BASE_URL}/products/${testProductId}/color/${testVariantId}/images`,
    );
    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ü–≤–µ—Ç–∞:', getColorResponse.data);

    // –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –±—ã—Å—Ç—Ä—ã—Ö —Ü–≤–µ—Ç–æ–≤ –ø—Ä–æ–¥—É–∫—Ç–∞
    console.log('\n‚ö° –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –±—ã—Å—Ç—Ä—ã—Ö —Ü–≤–µ—Ç–æ–≤ –ø—Ä–æ–¥—É–∫—Ç–∞...');
    const getColorsFastResponse = await axios.get(
      `${BASE_URL}/products/${testProductId}/colors-fast`,
    );
    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –±—ã—Å—Ç—Ä—ã–µ —Ü–≤–µ—Ç–∞:', getColorsFastResponse.data);

    // –¢–µ—Å—Ç 6: –£–¥–∞–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    console.log('\nüóëÔ∏è –¢–µ—Å—Ç 6: –£–¥–∞–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
    await axios.delete(`${BASE_URL}/products/color-images/${imageId}`);
    console.log('‚úÖ –¶–≤–µ—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ');

    // –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
    console.log('\nüîç –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è...');
    try {
      await axios.get(`${BASE_URL}/products/color-images/${imageId}`);
      console.log('‚ùå –û—à–∏–±–∫–∞: –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–æ');
    } catch (error) {
      if (error.response?.status === 404) {
        console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ (404 –æ—à–∏–±–∫–∞)');
      } else {
        console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error.response?.data);
      }
    }

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', {
      message: error.message,
      status: error.response?.status,
      data: error.response?.data,
      url: error.config?.url,
    });
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testColorImagesCRUD();
