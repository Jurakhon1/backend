const mysql = require('mysql2/promise');
const fs = require('fs');

const config = {
  host: '147.45.157.26',
  user: 'gen_user',
  password: '4rX&cHtw:uy&,l',
  database: 'phone_store_db',
  port: 3306,
};

async function setupColorImages() {
  let connection;

  try {
    console.log('üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    connection = await mysql.createConnection(config);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª
    console.log('üìñ –ß—Ç–µ–Ω–∏–µ SQL —Ñ–∞–π–ª–∞...');
    const sqlContent = fs.readFileSync('create-color-images-table.sql', 'utf8');

    // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    const queries = sqlContent
      .split(';')
      .map((query) => query.trim())
      .filter((query) => query.length > 0);

    console.log(`üìù –ù–∞–π–¥–µ–Ω–æ ${queries.length} SQL –∑–∞–ø—Ä–æ—Å–æ–≤`);

    // –í—ã–ø–æ–ª–Ω—è–µ–º –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å
    for (let i = 0; i < queries.length; i++) {
      const query = queries[i];
      if (query.trim()) {
        try {
          console.log(`‚è≥ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ ${i + 1}/${queries.length}...`);
          await connection.execute(query);
          console.log(`‚úÖ –ó–∞–ø—Ä–æ—Å ${i + 1} –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ`);
        } catch (error) {
          if (
            error.code === 'ER_TABLE_EXISTS_ERROR' ||
            error.code === 'ER_DUP_ENTRY'
          ) {
            console.log(
              `‚ö†Ô∏è  –ó–∞–ø—Ä–æ—Å ${i + 1} –ø—Ä–æ–ø—É—â–µ–Ω (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç): ${error.message}`,
            );
          } else {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ –∑–∞–ø—Ä–æ—Å–µ ${i + 1}:`, error.message);
          }
        }
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    const [rows] = await connection.execute(`
      SELECT 
        pci.id,
        p.name_ru as product_name,
        pv.variantValueRu as color_name,
        pci.primary_image_url,
        JSON_LENGTH(pci.gallery_urls) as gallery_count
      FROM product_color_images pci
      JOIN products p ON pci.product_id = p.id
      JOIN product_variants pv ON pci.variant_id = pv.id
      ORDER BY pci.id
    `);

    console.log('üìä –°–æ–∑–¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏:');
    rows.forEach((row) => {
      console.log(
        `  - ${row.product_name} (${row.color_name}): ${row.gallery_count} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`,
      );
    });

    console.log(
      `\nüéâ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ ${rows.length} –∑–∞–ø–∏—Å–µ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ü–≤–µ—Ç–æ–≤!`,
    );
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  } finally {
    if (connection) {
      await connection.end();
      console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
setupColorImages();
