const axios = require('axios');
const FormData = require('form-data');
const fs = require('fs');
const path = require('path');

const API_BASE_URL = 'http://localhost:3000';

async function testImageUpload() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...\n');

    // 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç
    console.log('1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞...');
    const productData = {
      name_ru: 'iPhone 15 Pro Test',
      name_en: 'iPhone 15 Pro Test',
      slug: 'iphone-15-pro-test',
      category_id: 1,
      brand_id: 1,
      sku: 'IPHONE-15-PRO-TEST-001',
      base_price: 99999,
      description_ru: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π',
      description_en: 'Test product for image upload testing',
      is_active: true,
      stock_quantity: 10,
    };

    const productResponse = await axios.post(
      `${API_BASE_URL}/products`,
      productData,
    );
    const productId = productResponse.data.id;
    console.log(`‚úÖ –ü—Ä–æ–¥—É–∫—Ç —Å–æ–∑–¥–∞–Ω —Å ID: ${productId}`);

    // 2. –°–æ–∑–¥–∞–µ–º —Ü–≤–µ—Ç–æ–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
    console.log('\n2. –°–æ–∑–¥–∞–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞...');
    const variantData = {
      name: '–ß–µ—Ä–Ω—ã–π',
      colorCode: '#000000',
      price_adjustment: 0,
      stock_quantity: 5,
      is_active: true,
    };

    const variantResponse = await axios.post(
      `${API_BASE_URL}/products/${productId}/variants`,
      variantData,
    );
    const variantId = variantResponse.data.id;
    console.log(`‚úÖ –í–∞—Ä–∏–∞–Ω—Ç —Å–æ–∑–¥–∞–Ω —Å ID: ${variantId}`);

    // 3. –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    console.log('\n3. –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const imagePath = path.join(
      __dirname,
      'uploads',
      'phones',
      'test-image.jpg',
    );

    if (!fs.existsSync(imagePath)) {
      console.log('‚ùå –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ:', imagePath);
      return;
    }

    const formData = new FormData();
    formData.append('file', fs.createReadStream(imagePath));

    const uploadResponse = await axios.post(
      `${API_BASE_URL}/products/${productId}/color-images/upload?colorId=${variantId}`,
      formData,
      {
        headers: {
          ...formData.getHeaders(),
        },
      },
    );

    console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üì∏ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', uploadResponse.data.primary_image_url);
    console.log('üñºÔ∏è URL –º–∏–Ω–∏–∞—Ç—é—Ä—ã:', uploadResponse.data.thumbnail_url);

    // 4. –ü–æ–ª—É—á–∞–µ–º –±—ã—Å—Ç—Ä—ã–µ —Ü–≤–µ—Ç–∞
    console.log('\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ –±—ã—Å—Ç—Ä—ã—Ö —Ü–≤–µ—Ç–æ–≤...');
    const colorsResponse = await axios.get(
      `${API_BASE_URL}/products/${productId}/colors-fast`,
    );
    console.log(
      '‚úÖ –¶–≤–µ—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã:',
      colorsResponse.data.colors.length,
      '—Ü–≤–µ—Ç–æ–≤',
    );

    // 5. –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞
    console.log('\n5. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ü–≤–µ—Ç–∞...');
    const colorImagesResponse = await axios.get(
      `${API_BASE_URL}/products/${productId}/color/${variantId}/images`,
    );
    console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã:', colorImagesResponse.data);

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
  } catch (error) {
    console.error(
      '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:',
      error.response?.data || error.message,
    );
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testImageUpload();

