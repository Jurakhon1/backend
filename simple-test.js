const axios = require('axios');

async function simpleTest() {
  try {
    console.log('üîç –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API...');

    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
    console.log('üì± –¢–µ—Å—Ç 1: –ö–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç...');
    try {
      const response = await axios.get('http://localhost:3000/');
      console.log('‚úÖ –ö–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç:', response.status);
    } catch (error) {
      console.log(
        '‚ùå –ö–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç:',
        error.response?.status || error.message,
      );
    }

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–æ–¥—É–∫—Ç—ã
    console.log('\nüì± –¢–µ—Å—Ç 2: –ü—Ä–æ–¥—É–∫—Ç—ã...');
    try {
      const response = await axios.get('http://localhost:3000/products');
      console.log(
        '‚úÖ –ü—Ä–æ–¥—É–∫—Ç—ã:',
        response.status,
        '-',
        response.data.length,
        '—à—Ç.',
      );
    } catch (error) {
      console.log('‚ùå –ü—Ä–æ–¥—É–∫—Ç—ã:', error.response?.status || error.message);
    }

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞—à –Ω–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
    console.log('\nüé® –¢–µ—Å—Ç 3: –¶–≤–µ—Ç–∞ –ø—Ä–æ–¥—É–∫—Ç–∞...');
    try {
      const response = await axios.get(
        'http://localhost:3000/products/1/colors-fast',
      );
      console.log('‚úÖ –¶–≤–µ—Ç–∞:', response.status);
      console.log('  - –¶–≤–µ—Ç–æ–≤:', response.data.colors?.length || 0);
    } catch (error) {
      console.log('‚ùå –¶–≤–µ—Ç–∞:', error.response?.status || error.message);
      if (error.response?.data) {
        console.log('  - –î–µ—Ç–∞–ª–∏:', error.response.data);
      }
    }
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

simpleTest();
